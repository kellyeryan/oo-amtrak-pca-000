exit
route[index_stationed_at...index_destination]
route[index_destination...index_stationed_at]
exit
route[index_destination...index_stationed_at]
exit
route
exit
route[index_stationed_at...index_destination].each {|r| r["remaining seats"] -= number_of_tickets}
route[index_stationed_at...index_destination]
exit
route[index_stationed_at...index_destination]exit
route[index_stationed_at...index_destination]
route[index_destination...index_stationed_at]
route[index_destination..index_stationed_at]
route[index_destination]
route[index_stationed_at]
index_stationed_at
exit
route[index_destination]
route[index_destination..index_stationed_at]
route[index_destination...index_stationed_at]
self.route[index_destination...index_stationed_at]
route
self.route
self
exit
number_of_tickets
exit
number_of_tickets
exit
route
exit
r["remaining seats"] -= number_of_tickets
r["remaining seats"] -= number_of_ticekts
r["remaining seats"]
r
exit
r["remaining seats"]
exit
number_of_tickets
r["remaining seats"] - number_of_tickets 
continue
new_route
continue
exit
r["remaining seats"] - number_of_tickets 
exit
r["remaining seats"] - number_of_tickets
r["remaining seats"]
r["remaining seats"}
exit
route[index_destination...index_stationed_at].each {|r| r["remaining seats"] - number_of_tickets }
route[index_destination...index_stationed_at]
route
new_route
exit
name
number_of_tickets
stationed_at
destination
exit
route[index_stationed_at..index_destination].any? {|r| r["remaining seats"] < number_of_tickets }
route[index_stationed_at..index_destination].each {|r| r["remaining seats"].any? < number_of_tickets }
route[index_stationed_at..index_destination].each {|r| r["remaining seats"] > number_of_tickets }
route[index_stationed_at..index_destination].each do {|r| r["remaining seats"] > number_of_tickets}
route[index_stationed_at..index_destination]
index_destination
route
exit
number_of_tickets
stationed_at
destination
route[index_stationed_at]["station name"]
route[index_stationed_at]["remaining seats"]
route[index_destination]["remaining seats"]
route[index_destination]
exit
route[index_stationed_at]["remaining seats"] - 1
exit
route[index_stationed_at]["remaining seats"]
route[index_stationed_at]
exit
r[1]
r[index_stationed_at].index
r[index_stationed_at]
r
exit
route.index { |r| r["station name"] == destination }
route.index { |r| r["station name"] == stationed_at }
route.find { |r| r["station name"] == stationed_at }
route.find {|r| r["station name] == stationed_at }
route.find {|r| r["station name] == stationed_at}
route.find_index {|r| r["station name] == stationed_at}
route[0]
stationed_at
destination
route
exit
route.values_at
route.values
route[0].values
route[0].keys
route.keys
route.index(destination)
route.index("station name" == destination)
exit
route
index
route.each_with_index{|r| index = r["station name"] == destination}
stationed_at
destination
route.each_with_index{|r| puts index if r["station name"] == destination}
route.each_with_index{|r| puts index if r["station name"] == stationed_at}
route.each_with_index{|r| put index if r["station name"] == stationed_at}
route.each_with_index{|r| put index if r["station name"] == stationed_at]
stationed_at
route.each_with_index{|r| put index if r["station name"] == stationed_at
route
stationed_at
r["station name"]
index
exit
route.map {|r| puts "#{destination}" if r["station name"] == destination && r["remaining seats"] >= number_of_tickets }
route.map {|r| puts r["remaining seats"] if r["station name"] == destination }
route.map {|r| r["station name"] == destination }
route.map {|r| r["station name"]}
route.map {|r| r["station_name"]}
destination.tickets
stationed_at
destination
tickets
route
continue
name
number_of_tickets
destination
exit
route
exit
data
data = JSON.load file
file = File.open(path)
JSON.parse(path)
path.parse
path.map {|p| p}
path
